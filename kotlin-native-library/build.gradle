plugins {
    id 'kotlin-multiplatform' version '1.3.31'
}
repositories {
    jcenter()
    maven {
        url = uri("https://dl.bintray.com/kotlin/kotlinx/")
    }
    maven {
        url = uri("https://dl.bintray.com/kotlin/ktor/")
    }
    mavenCentral()
}
group 'com.test.task.example'
version '0.0.1'

apply plugin: 'maven-publish'

kotlin {
    jvm()
    // This is for iPhone emulator
    // Switch here to iosArm64 (or iosArm32) to build library for iPhone device
    iosX64("ios") {
        compilations.main.outputKinds("framework")
    }
    sourceSets {
        commonMain {
            dependencies {
                implementation('org.jetbrains.kotlin:kotlin-stdlib')

                implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core-common:$coroutines_version")
                implementation("org.jetbrains.kotlinx:kotlinx-serialization-runtime-common:$serialization_version")

                implementation("io.ktor:ktor-client-core:$ktor_client_core_version")
                implementation("io.ktor:ktor-client-json:$ktor_client_core_version")
                implementation("io.ktor:ktor-client-gson:$ktor_client_core_version")
            }
        }
        commonTest {
            dependencies {
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
            }
        }
        jvmMain {
            dependencies {
                implementation("org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version")

                implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version")
                implementation("org.jetbrains.kotlinx:kotlinx-serialization-runtime:$serialization_version")
                implementation("io.ktor:ktor-client-core-jvm:$ktor_client_core_version")
                implementation("io.ktor:ktor-client-json-jvm:$ktor_client_core_version")
                implementation("io.ktor:ktor-client-gson:$ktor_client_core_version")
            }
        }
        jvmTest {
            dependencies {
                implementation kotlin('test')
                implementation kotlin('test-junit')
            }
        }
        iosMain {
            dependencies {
                implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core-native:$coroutines_version")
                implementation("org.jetbrains.kotlinx:kotlinx-serialization-runtime-native:$serialization_version")
                implementation("io.ktor:ktor-client-ios:$ktor_client_core_version")
                implementation("io.ktor:ktor-client-core-native:$ktor_client_core_version")
                implementation("io.ktor:ktor-client-json-native:$ktor_client_core_version")
                implementation("io.ktor:ktor-client-gson:$ktor_client_core_version")
            }
        }
        iosTest {
        }
    }
}

configurations {
    compileClasspath
}